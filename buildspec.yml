version: 0.2

env:
  parameter-store:
    REACT_APP_CONFORMATION_EMAIL_REDIRECT: /webportal/front-end/REACT_APP_CONFORMATION_EMAIL_REDIRECT
    REACT_APP_GRAPHQL_ENDPOINT: /webportal/front-end/REACT_APP_GRAPHQL_ENDPOINT
    REACT_APP_GRAPHQL_WS_ENDPOINT: /webportal/front-end/REACT_APP_GRAPHQL_WS_ENDPOINT
    REACT_APP_PASSWORD_FORGOT_REDIRECT: /webportal/front-end/REACT_APP_PASSWORD_FORGOT_REDIRECT
    REACT_APP_REST_ENDPOINT: /webportal/front-end/REACT_APP_REST_ENDPOINT

phases:
  install:
    commands:
      - echo Entered the install phase ...
      # Using Ubuntu
      - curl -sL https://deb.nodesource.com/setup_10.x | bash -
      - apt install -y nodejs
      # install 
      - echo Installing yarn ...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt install --no-install-recommends yarn
  pre_build:
    commands:
      - echo Entered the pre_build phase ...
      - echo Installing dependencies ...
      - yarn
  build:
    run-as: root
    commands:
      - echo Entered the build phase ...
      - echo Build started on `date`
      - echo Building ...
      - yarn build 
  post_build:
    commands:
      - echo Entered the post_build phase ...
      - echo Build completed on `date`
      # copy the contents of /build to S3
      #- aws s3 cp --recursive ./build s3://cloudphan/  #--acl public-read
      # set the cache-control headers for service-worker.js to prevent
      # browser caching
      # - >
      #   aws s3 cp --acl public-read 
      #   --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
      #   ./build/service-worker.js s3://${DeployBucket}/
      # # set the cache-control headers for index.html to prevent
      # # browser caching
      # - >
      #   aws s3 cp --acl public-read 
      #   --cache-control="max-age=0, no-cache, no-store, must-revalidate" 
      #   ./build/index.html s3://${DeployBucket}/
      # # invalidate the CloudFront cache for index.html and service-worker.js
      # # to force CloudFront to update its edge locations with the new versions
      # - >
      #   aws cloudfront create-invalidation --distribution-id ${Distribution} 
      #   --paths /index.html /service-worker.js
artifacts:
  files:
    - "**/*"
  discard-paths: no
  base-directory: build
